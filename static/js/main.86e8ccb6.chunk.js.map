{"version":3,"sources":["App.module.css","components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","components/Form/Form.js","components/ContactsItem/ContactsItem.js","components/ContactsList/ContactsList.js","components/Filter/Filter.js","App.js","index.js","components/ContactsItem/ContactsItem.module.css","components/Filter/Filter.module.css"],"names":["module","exports","Form","state","name","number","handleChange","e","currentTarget","value","setState","handelSubmit","preventDefault","props","onSubmit","reset","className","s","form","this","form__label","form__input","type","pattern","title","required","onChange","form__button","Component","ContactsItem","id","onDeleteContact","item","text","button","onClick","ContactsList","contacts","contacts__list","map","Filter","filter__label","filter__input","placeholder","App","filter","deleteContact","contactId","prevState","contact","addContact","uuidv4","normolizedName","toLowerCase","find","alert","changeFilter","getVisibleContacts","normolizedFitres","includes","visibleContacts","container","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.86e8ccb6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1c7iC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts__list\":\"ContactsList_contacts__list__2Bkjt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3B55d\",\"form__label\":\"Form_form__label__1gEEo\",\"form__input\":\"Form_form__input__13cDu\",\"form__button\":\"Form_form__button__3L-4Z\"};","import PropTypes from 'prop-types';\r\nimport { Component } from 'react';\r\nimport s from './Form.module.css'\r\n\r\nclass Form extends Component{\r\nstate = {\r\n  name: '',\r\n  number: ''\r\n    }\r\n\r\n     handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n      this.setState({[name]: value})\r\n    }\r\n    \r\n    handelSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset()\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: ''\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n    <form\r\n        className={s.form}\r\n        onSubmit={this.handelSubmit}>\r\n        <label className={s.form__label}>\r\n          Name\r\n           <input\r\n               className={s.form__input}\r\n               value={this.state.name}\r\n               type=\"text\"\r\n               name=\"name\"\r\n               pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n               title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n               required\r\n               onChange = {this.handleChange}\r\n/>\r\n        </label>\r\n  \r\n        <label className={s.form__label}>\r\n          Number\r\n            <input\r\n               className={s.form__input}         \r\n               value={this.state.number}\r\n               type=\"tel\"\r\n               name=\"number\"\r\n               pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n               title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n               required\r\n               onChange = {this.handleChange}\r\n/>\r\n          </label>\r\n            <button className={s.form__button} type=\"submit\">Add contact</button>\r\n    </form>\r\n        \r\n    )\r\n}\r\n};\r\n\r\nForm.propTypes = {\r\n    onSubmit: PropTypes.func,\r\n};\r\n\r\nexport default Form;","import PropTypes from 'prop-types';\r\nimport s from './ContactsItem.module.css'\r\n\r\nconst ContactsItem = ({ id, name, number, onDeleteContact }) => (\r\n     <li className={s.item}>\r\n        <p className={s.text}>{name}</p>\r\n        <p className={s.text}>{number}</p>\r\n        <button className={s.button} onClick = {()=> onDeleteContact(id)}>Delete</button>\r\n    </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.string,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;","import PropTypes from 'prop-types';\r\nimport s from './ContactsList.module.css'\r\nimport ContactsItem from '../ContactsItem';\r\n\r\n\r\nconst ContactsList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={s.contacts__list}>\r\n        {contacts.map(({id, name, number} ) => (\r\n             <ContactsItem\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                onDeleteContact={onDeleteContact} />\r\n        ))}\r\n    </ul>\r\n);\r\n\r\nContactsList.propTypes = {\r\n    contacts: PropTypes.array,\r\n    onDeleteContact: PropTypes.func,\r\n};\r\n\r\n\r\nexport default ContactsList;","import PropTypes from 'prop-types';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n    <label className={s.filter__label}>\r\n        Find contacts by name\r\n        <input className={s.filter__input} type=\"text\" value={value} onChange={onChange} placeholder=\"Jacob Mercer\" />\r\n    </label>\r\n);\r\n\r\nFilter.propTypes = {\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { alert} from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport s from './App.module.css'\n\nimport Form from './components/Form';\nimport ContactsList from './components/ContactsList';\nimport Filter from './components/Filter';\n\n\nclass App extends Component{\nstate = {\n  contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n  filter:'',\n}\n  \n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  \n  addContact = ({ name, number }) => {\n    const contact = {\n      id: uuidv4(),\n      name,\n      number,\n    }\n\n    const normolizedName = name.toLowerCase();\n\n    if (this.state.contacts.find(contact => contact.name.toLowerCase() === normolizedName)) {\n      return alert(`${name} is already in contacts`);\n    };  \n    \n    this.setState(prevState => ({\n      contacts: [contact, ...prevState.contacts],\n    }));\n  };\n\n  changeFilter = (e) => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normolizedFitres = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normolizedFitres),\n    );    \n  };\n\n    \n  render() {\n    const {filter} = this.state;\n    const { addContact, deleteContact, changeFilter} = this;\n    const visibleContacts = this.getVisibleContacts();\n        \n    return (\n      <div className={s.container}>\n        <h1>Phonebook</h1>\n        <Form\n          onSubmit={addContact}\n        />\n        <h2>Contacts</h2>\n        <Filter  value={filter} onChange={changeFilter}/>\n        <ContactsList\n          contacts={visibleContacts}\n          onDeleteContact={deleteContact} />\n      </div>\n   );\n }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactsItem_item__2qkoM\",\"text\":\"ContactsItem_text__1OCch\",\"button\":\"ContactsItem_button__Mtoij\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"Filter_filter__label__7wrNm\",\"filter__input\":\"Filter_filter__input__IX0TK\"};"],"sourceRoot":""}